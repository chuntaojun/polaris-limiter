name: Release

on:
  release:
    types: [published]

jobs:
  release:
    name: Release polaris limit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin, kubernetes]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
          - goos: kubernetes
            goarch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21.0

      - name: Build
        id: build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: |
          if [ ${GOOS} == "kubernetes" ];then
            set -e
            cd deploy
            DIR_NAME=polaris-limiter-release_${VERSION}.${GOOS}
            mkdir ${DIR_NAME}
            pushd ${DIR_NAME}
            cp ../kubernetes/* ./
            sed -i "s/##LIMITER_SERVER_VERSION##/${VERSION}/g" 1-polaris-limiter-statefulset.yaml
            popd
            PACKAGE_NAME=${DIR_NAME}.zip
            zip -r ${PACKAGE_NAME} ${DIR_NAME}
            mv ${PACKAGE_NAME} ../
            echo ::set-output name=name::${PACKAGE_NAME}
          else
            set -e
            echo "version is $VERSION"
            bash build.sh $VERSION
            PACKAGE_NAME=$(ls | grep polaris-limiter-release*.zip | sed -n '1p')
            echo ::set-output name=name::${PACKAGE_NAME}
          fi

      - name: Upload asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ steps.build.outputs.name }}
          asset_name: ${{ steps.build.outputs.name }}
          asset_content_type: application/gzip
